Experiment
04
❖
Aim:
To
implement
Lamport’s
Timestamp
algorithm
in
student
portal
using
fileupload
❖
Objectives:
1)
To
implement
clock
synchronization
between
multiple
processes
2)
To
implement
Lamport’s
clock
synchronization
algorithm
3)
To
get
a
total
ordering
of
event
based
on
logical
timestamps
❖
Theory:
Events:
In
a
distributed
system,
there
are
three
primary
types
of
events:
Local
Event:
These
are
events
that
occur
within
a
single
process,
such
as
executing
a
command.
Send
Event:
When
one
process
sends
a
message
to
another
process.
Receive
Event:
When
a
process
receives
a
message
from
another
process.
Defining
the
"Happened
Before"
Relationship:
The
"->"
symbol
is
used
to
represent
the
"happened
before"
relationship.
If
event
A
occurs
causally
before
event
B,
then
timestamp(A)
<
timestamp(B).
Causality
in
this
context
refers
to
the
causal
relationship
or
the
chain
of
events
that
connect
one
occurrence
to
another
in
a
way
that
implies
causation.
The
algorithm
provides
a
partial
order
of
events
because
it's
often
impossible
to
definitively
establish
the
causality
between
all
events.
Basic
Rules
for
"Happened
Before"
Relationship:
For
local
events:
a
→
b
if
time(a)
<
time(b).
This
means
that
if
the
timestamp
of
event
A
is
less
than
the
timestamp
of
event
B,
A
causally
precedes
B.
For
send
and
receive
events: